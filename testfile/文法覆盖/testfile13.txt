int max ;
int min ;
int second (int a[])
{
	int i ;
	int sec ;
	int k=0 ;
	max=a[0];
	for (i=1 ;i<4;i = i+ 1)
	{
		if (max>=a[i])
		continue ;
		else 
		max=a[i] ;
	}
	for (i=0 ;i<4 ;i = i+ 1)
	{
		if(max==a[i])
		k=i ;
		else
		continue ;
	}
	a[k]=0 ;
	sec=a[0] ;
	for (i=1;i<4 ;i = i+ 1)
	{
		if(sec>=a[i])
		continue ;
		else
		sec=a[i] ;
	}
	return sec ;
} 
int third (int b[])
{
	int i ;
	int thi ;
	int k=0 ;
	min=b[0];
	for (i=1 ;i<4;i = i+ 1)
	{
		if (min<=b[i])
		continue ;
		else 
		min=b[i] ;
	}
	for(i=0;i<4;i = i+ 1)
	{
		if(min==b[i])
			k=i ;
		else
		continue ;
	}
	b[k]=1000000;
	thi=b[0] ;
	for (i=0;i<4 ;i = i + 1)
	{
		if(thi<=b[i])
		continue ;
		else
		thi=b[i] ;
	}
	return thi ;
} 
int max_(int a,int b)
{
	if(a>b)
	return a;
	else
	return b;
}
int min_(int a,int b)
{
	if(a<b)
	return a;
	else
	return b;
}
int main()
{
	int a[4] ;
	int b[4] ;
	int c[4] ;
	int d[4] ;
	int all[8] ; 
	int i ;
	int x1 ;
	int x2 ;
	int y1 ;
	int y2 ;
	int square ;
	int cha1 ;
	int cha2 ;
	for(i=0;i<8;i++)
	{
		//scanf("%d",&all[i]) ;
		all[i] = getint();
		if (i/2==i/2)
		{
			a[i/2]=all[i] ;
			b[i/2]=a[i/2] ;
		}
		else
		{
			c[(i-1)/2]=all[i] ;
			d[(i-1)/2]=all[i] ;
		}
	}
	x1=second(a) ;
	x2=third(b) ;
	y1=second(c) ;
	y2=third(d) ;
	cha1=min_(max_(all[0],all[2]),max_(all[4],all[6]))-max_(min_(all[0],all[2]),min_(all[4],all[6]));
	cha2=min_(max_(all[1],all[3]),max_(all[5],all[7]))-max_(min_(all[1],all[3]),min_(all[5],all[7]));
	if(cha1>0&&cha2>0)
	square=(x1-x2)*(y1-y2) ; 
	else
	square=0 ;
	printf ("%d",square) ;
	return 0 ;
}